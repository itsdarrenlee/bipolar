name: Build

on: [push, pull_request]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        spec: [ linux-clang, linux-g++ ]
    steps:
    - uses: actions/checkout@v2
    - name: Install Clang
      if: ${{ contains(matrix.spec, 'clang') }}
      run: sudo apt-get -qy install clang
    - name: Install Locales
      run: sudo apt-get -qy install locales-all
    - name: Install Qt
      run: sudo apt-get -qy install qt5-qmake qtbase5-dev libqt5xmlpatterns5-dev
    - name: Build
      run: |
        qmake -o "$RUNNER_TEMP" -spec "${{ matrix.spec }}" -recursive -Wall -Wlogic -Wparser CONFIG+=debug_and_release "$GITHUB_WORKSPACE"
        make -C "$RUNNER_TEMP"
    - name: Test (default locale)
      run: make -C "$RUNNER_TEMP" check
    - name: Test (non-EN locale)
      env:
        BIPOLAR_TEST_LOCALE: de_DE.UTF-8
      run: make -C "$RUNNER_TEMP" check

  linux-qts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        qt: [ '5.9.9', '5.12.11', '5.15.2' ]
        spec: [ linux-clang, linux-g++ ]
    steps:
    - uses: actions/checkout@v2
    - name: Install Clang
      if: ${{ contains(matrix.spec, 'clang') }}
      run: sudo apt-get -qy install clang
    - name: Install Locales
      run: sudo apt-get -qy install locales-all
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
    - name: Build
      run: |
        qmake -o "$RUNNER_TEMP" -spec "${{ matrix.spec }}" -recursive -Wall -Wlogic -Wparser CONFIG+=debug_and_release "$GITHUB_WORKSPACE"
        make -C "$RUNNER_TEMP"
    - name: Test (default locale)
      run: make -C "$RUNNER_TEMP" check
    - name: Test (non-EN locale)
      env:
        BIPOLAR_TEST_LOCALE: de_DE.UTF-8
      run: make -C "$RUNNER_TEMP" check

  mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOs-latest ]
        qt: [ '5.9.9', '5.12.11', '5.15.2' ]
        spec: [ linux-clang, linux-g++ ]
    steps:
    - uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
    - name: Build
      run: |
        qmake -o "$RUNNER_TEMP" -spec "${{ matrix.spec }}" -recursive -Wall -Wlogic -Wparser CONFIG+=debug_and_release "$GITHUB_WORKSPACE"
        make -C "$RUNNER_TEMP"
    - name: Test (default locale)
      run: make -C "$RUNNER_TEMP" check
    - name: Test (non-EN locale)
      env:
        BIPOLAR_TEST_LOCALE: de_DE.UTF-8
      run: make -C "$RUNNER_TEMP" check

  win:
    runs-on: ${{ matrix.os }}
    defaults: { run: { shell: cmd } }
    strategy:
      matrix:
        os: [ windows-latest ]
        qt: [ '5.12.11', '5.15.2' ]
        make: [ mingw32-make.exe, nmake.exe ]
        include:
        - qt: '5.12.11'
          arch: win64_mingw73
        - qt: '5.15.2'
          arch: win64_mingw81
    steps:
    - uses: actions/checkout@v2
    - name: Install Qt (mingw)
      if: ${{ contains(matrix.toolchain, 'mingw') }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        arch: ${{ matrix.arch }}
    - name: Install Qt (msvc)
      if: ${{ contains(matrix.generator, 'nmake') }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
    - name: Configure MSVC
      if: ${{ contains(matrix.generator, 'nmake') }}
      uses: ilammy/msvc-dev-cmd@v1
    - name: Build
      run: |
        "%Qt5_DIR%\bin\qmake" -o "%RUNNER_TEMP%" -recursive -Wall -Wlogic -Wparser CONFIG+=debug_and_release "%GITHUB_WORKSPACE%"
        ${{ matrix.make }} -C "%RUNNER_TEMP%"
    - name: Test (default locale)
      run: ${{ matrix.make }} -C "%RUNNER_TEMP%" check
    - name: Test (non-EN locale)
      env:
        BIPOLAR_TEST_LOCALE: de_DE.UTF-8
      run: ${{ matrix.make }} -C "%RUNNER_TEMP%" check
